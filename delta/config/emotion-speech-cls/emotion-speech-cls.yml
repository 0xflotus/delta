---
data:
  train:
    paths:
    - "/nfs/project/datasets/xingcheng/data/emotion/train/9-11-before"
    #- '/nfs/project/datasets/xingcheng/data/emotion/train/9-15'
    #- '/nfs/project/datasets/xingcheng/data/emotion/train/9-27'
    segments:
    - '/nfs/project/datasets/xingcheng/data/emotion/train/9-11-before/textgrid.segments'
    #- '/nfs/project/datasets/xingcheng/data/emotion/train/9-15/textgrid.segments'
    #- '/nfs/project/datasets/xingcheng/data/emotion/train/9-27/textgrid.segments'
  eval:
    paths:
    - '/nfs/project/datasets/xingcheng/data/emotion/dev/9-11'
    segments:
    - '/nfs/project/datasets/xingcheng/data/emotion/dev/9-11/textgrid.segments'
  infer:
    paths:
    - '/nfs/project/datasets/xingcheng/data/emotion/test/9-8'
    - '/nfs/project/datasets/xingcheng/data/emotion/test/9-12'
    segments:
    - '/nfs/project/datasets/xingcheng/data/emotion/test/textgrid.segments'
  task:
    name: SpeechClsTask
    suffix: .npy # file suffix
    audio:
      dry_run: false # not save feat
      # params
      clip_size: 30 # clip len in seconds
      stride: 0.5 # stride in ratio of clip_size
      sr: 8000 # sample rate
      winlen: 0.025 # window len
      winstep: 0.01 # window stride
      nfft: 512 # fft bins, default: 512
      lowfreq: 0
      highfreq: null # default: null, 200 points for 800 nfft, 400 points for 1600 nfft
      preemph: 0.97 # default: 0.97
      # extractor
      feature_extractor: tffeat # `tffeat` to use TF feature_extraction .so library, 'pyfeat' to python_speech_feature
      save_feat_path: null  # null for dump feat with same dir of wavs
      # fbank
      save_fbank: true # save fbank or power spec
      feature_size: 40 # extract feature size
      add_delta_deltas: true # delta deltas
      # log pwoer
      log_powspec: false # true, save log power spec; otherwise save power spec
      # cmvn
      cmvn: true # apply cmvn or generate cmvn
      cmvn_path: ./cmvn_conflict.npy # cmvn file
    text:
      enable: False
      vocab_path: /nfs/project/datasets/xingcheng/data/vocab/chars5004_attention.txt # path to vocab(default: 'vocab
      vocab_size: 5004 # vocab size
      max_text_len: 100 # max length for text
    classes:
      num: 2
      vocab:
        normal: 0
        conflict: 1
    num_parallel_calls: 12
    num_prefetch_batch: 2
    shuffle_buffer_size: 200000
    need_shuffle: true

model:
  name: EmoCRNNRawModel
  type: raw # raw, keras or eager model
  net:
    structure:
      embedding_size: 128
      filters: # equal number of cnn layers
      - 128
      - 512
      - 512
      filter_size: # equal number of cnn layers
      - [5, 3]
      - [5, 3]
      - [5, 3]
      filter_stride: # equal number of cnn layers
      - [1, 1]
      - [1, 1]
      - [1, 1]
      pool_size: # equal number of cnn layers
      - [4, 4]
      - [1, 2]
      - [1, 2]
      num_filters: 128
      linear_num: 786 # hidden number of linear layer
      cell_num: 128 # cell units of the lstm
      hidden1: 64 # number of hidden units of fully connected layer
      attention: false # whether to use attention, false mean use max-pooling
      attention_size: 128 # attention_size
      use_lstm_layer: false # whether to use lstm layer, false mean no lstm layer
      use_dropout: true # whether to use bn, dropout layer
      dropout_rate: 0.2
      use_bn: true # whether to use bn, dropout layer

      score_threshold: 0.5 # threshold to predict POS example
      threshold: 3 # threshold to predict POS example


solver:
  name: EmotionSolver
  quantization:
    enable: false # whether to quantization model
    quant_delay: 0 # Number of steps after which weights and activations are quantized during training
  adversarial:
    enable: false # whether to using adversiral training
    adv_alpha: 0.5 # adviseral alpha of loss
    adv_epslion: 0.1 # adviseral example epslion
  model_average:
    enable: false # use average model
    var_avg_decay: 0.99 # the decay rate of varaibles
  optimizer:
    name: adam
    epochs: 5 # maximum epochs
    batch_size: 32 # number of elements in a training batch
    loss: CrossEntropyLoss
    label_smoothing: 0.0 # label smoothing rate
    learning_rate:
      rate: 0.0001 # learning rate of Adam optimizer
      type:  exp_decay # learning rate type
      decay_rate: 0.99  # the lr decay rate
      decay_steps: 100  # the lr decay_step for optimizer
    clip_global_norm: 3.0 # clip global norm
    multitask: False # whether is multi-task
  metrics:
    pos_label: 1 # int, same to sklearn
    cals:
    - name: AccuracyCal
      arguments: null 
    - name: ConfusionMatrixCal
      arguments: null
    - name: PrecisionCal
      arguments:
        average: 'binary'
    - name: RecallCal
      arguments:
        average: 'binary'
    - name: F1ScoreCal
      arguments:
        average: 'binary'
  postproc:
      name: EmoPostProc
      log_verbose: false 
      eval: true # compute metrics
      infer: true  # get predict results
      pred_path: null # None for `model_path`/infer, dumps infer output to this dir
      thresholds:
          - 0.5
      smoothing:
          enable: true
          count: 2
  saver:
    model_path: "ckpt/emotion-speech-cls/test"
    max_to_keep: 10
    save_checkpoints_steps: 100
    keep_checkpoint_every_n_hours: 10000
    checkpoint_every: 100 # the step to save checkpoint
    summary: false
    save_summary_steps: 100
    eval_on_dev_every_secs: 1
    print_every: 10
    resume_model_path: ""
  run_config:
    debug: false # use tfdbug
    tf_random_seed: null # 0-2**32; null is None, try to read data from /dev/urandom if available or seed from the clock otherwise
    allow_soft_placement: true
    log_device_placement: false
    intra_op_parallelism_threads: 10
    inter_op_parallelism_threads: 10
    allow_growth: true
    log_step_count_steps: 100 #The frequency, in number of global steps, that the global step/sec and the loss will be logged during training.
  distilling:
    enable: false 
    name : Teacher
    loss : DistillationLoss
    temperature: 5
    alpha: 0.5
    teacher_model: /nfs/project/gaoyonghu/nlu-ml/delta/emotion/models/30sec_e2e/frozen_graph_30sec_e2e.pb


serving:
  enable: true
  name : Evaluate
  model: /nfs/project/gaoyonghu/nlu-ml/delta/emotion/models/30sec_e2e/frozen_graph_30sec_e2e.pb # saved model dir, ckpt dir, or frozen_model.pb
  inputs: 'inputs:0'
  outpus: 'softmax_output:0'

